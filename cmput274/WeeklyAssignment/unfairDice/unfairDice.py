#----------------------------
#Name: Al Hisham Anik
#ID: 1585385
#CMPUT 274, Assignment2
#----------------------------

import random


def biased_rolls(prob_list,s,n):
	""" Simulate n rolls of a biased m-sided  die and  return a list  containing  the  results"""
	""" Arguments:
            prob_list: a list of the probabilities of rolling the 
                   number on each side of the m-sided die. The list  
                   will always have the length m (m >= 2), where m is 
                   the number of sides numbered 1 to m. Therefore,  
                   for example, the probability stored at index 0 in 
                   the list is the probability of rolling a 1 on
                   the m-sided die.
            s: the seed to use when initializing the PRNG
            n: the number of rolls to return

        Return:
            rolls: a list (of length n) containing each of the n rolls of the 
            biased die, in the order they were generated.	"""
	
	#A fixed is used when initializing the PRNG
	random.seed(s)
	ReturnValues = list(range(len(prob_list)))
	rolls =[]
	x=0
	y=0

	for i in range(n):
		randomroll = random.random()
		for z in ReturnValues:
			y= prob_list[z]+y
			if x< randomroll and randomroll <= y:
				rolls.append(z+1)
#Returns list of length n rolls each containing each of the n rolls of biased dice in the order
#they were generated
	return rolls





#This function draws frequency histogram of the rolls of an m-sided die mapped to a fixed width
def draw_histogram(m,rolls,width):
	minimum_value_element = min(rolls)
	frequency_of_min_element = rolls.count(minimum_value_element)
	for i in range(0,m):
		if rolls.count(i+1) > frequency_of_min_element: #counting frequency from value starting from 1
			max_frequency = rolls.count(i+1)
			frequency_of_min_element = max_frequency
	scale_factor = width/max_frequency
	for i in range(0,m):
		hashes = round(rolls.count(i+1)*scale_factor)
		dashes = width-hashes
		print(i+1, ".", "#"*hashes, "-"*dashes, sep='')



#Main input where the user types in the the number of dice side
#list of rolls that will be generated by the die
#and the fixed width of the histogram
if __name__ == "__main__":
	#print(biased_rolls([1/12, 1/4, 1/3, 1/12, 1/12, 1/6], (2**32)-1, 20))
	
	m = input("Number of faces: ")
	print("Frequency Histogram:",m,"-sided Die")
	print(draw_histogram(4, [3, 2, 1, 2, 2, 3, 4, 4, 3, 3], 4))